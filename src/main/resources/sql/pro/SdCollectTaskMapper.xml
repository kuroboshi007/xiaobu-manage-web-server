<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaobu.web.pro.dao.SdCollectTaskDao">
    <parameterMap id="parameterMap" type="com.xiaobu.web.pro.entity.SdCollectTask"></parameterMap>
    <resultMap id="SdCollectTaskResultMap" type="com.xiaobu.web.pro.entity.SdCollectTask"></resultMap>


    <sql id="columnSql">
		<trim suffixOverrides=",">
			t.id,
			t.parent_id,
			t.consumer_id,
			t.organization_id,
			t."name",
			t.intro,
			t.detail,
			t.type,
			t.example,
			t.total,
			t.price,
			t.duration,
			t."promiseTime",
            to_char(t."deadline",'YYYY-MM-DD'),
			t.count,
			t."doneNum",
			t.status,
            to_char(t."startTime",'YYYY-MM-DD'),
	 	</trim>
	</sql>
	
    <select id="getById" parameterType="String" resultMap="SdCollectTaskResultMap">
        select
			<include refid="columnSql"></include>
		from sd_collect_task t
		where t.id = #{value}
    </select>



    <insert id="add" parameterMap="parameterMap">
		insert into sd_collect_task
		<trim prefix="(" suffix=")" suffixOverrides=",">
			parent_id,
			consumer_id,
			organization_id,
			name,
			intro,
			detail,
			type,
			example,
			total,
			price,
			duration,
            "promiseTime",
			deadline,
			count,
			"doneNum",
			status,
			"startTime",
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{parentId},
			#{consumerId},
			#{organizationId},
			#{name},
			#{intro},
			#{detail},
			#{type},
			#{example},
			#{total},
			#{price},
			#{duration},
			#{promisetime},
			#{deadline},
			#{count},
			#{doneNum},
			#{status},
			#{startTime},
		</trim>
	</insert>
	
	
	<update id="updateNotNull" parameterMap="parameterMap">
		update sd_collect_task
		<set>
			<if test="parentId != null">
			parent_id = #{parentId},
			</if>
			<if test="parentId != null">
			consumer_id = #{parentId},
			</if>
			<if test="organizationId != null">
			organization_id = #{organizationId},
			</if>
			<if test="name != null">
			name = #{name},
			</if>
			<if test="intro != null">
			intro = #{intro},
			</if>
			<if test="detail != null">
			detail = #{detail},
			</if>
			<if test="type != null">
			type = #{type},
			</if>
			<if test="example != null">
			example = #{example},
			</if>
			<if test="total != null">
			total = #{total},
			</if>
			<if test="price != null">
			price = #{price},
			</if>
			<if test="duration != null">
			duration = #{duration},
			</if>
			<if test="promisetime != null">
			promiseTime = #{promisetime},
			</if>
			<if test="deadline != null">
			deadline = #{deadline},
			</if>
			<if test="count != null">
			count = #{count},
			</if>
			<if test="doneNum != null">
			doneNum = #{doneNum},
			</if>
			<if test="status != null">
			status = #{status},
			</if>
			<if test="startTime != null">
			startTime = #{startTime},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.Integer">
		delete from sd_collect_task where id = #{value}
	</delete>

    <select id="findByPage" parameterMap="parameterMap" resultMap="SdCollectTaskResultMap">
        select
        <include refid="columnSql"></include>,
        sd.dictdata_name as typeName,
        sc."name" as consumerName,
        so."name" as organizationName
        from sd_collect_task t
        LEFT JOIN sd_organization so on t.organization_id = so."id"
        left JOIN sd_consumer sc on t.consumer_id = sc."id"
        LEFT JOIN sd_dictionarydata sd ON t."type" = sd.dictdata_value
        <where>
            1=1
            <if test="name != null and name != ''">
                and t.name  like '%${name}%'
            </if>
            <if test="type != null and type != ''">
                and t.type = #{type}
            </if>
            <if test="consumerId != null and consumerId != ''">
                and t.consumer_id = #{consumerId}
            </if>
            AND sd.dictdata_type = '0002'
        </where>
        ORDER BY t.id ASC
    </select>
</mapper>