<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaobu.web.system.dao.SdConsumerDao">
    <parameterMap id="parameterMap" type="com.xiaobu.web.system.entity.SdConsumer"></parameterMap>
    <resultMap id="SdConsumerResultMap" type="com.xiaobu.web.system.entity.SdConsumer"></resultMap>


    <sql id="columnSql">
		<trim suffixOverrides=",">
			t.id,
			t.name,
			t.phone,
			t.email,
			t.username,
			t.password,
			t.created_at,
			t.updated_at,
	 	</trim>
	</sql>
	

    <select id="selectByUsername" parameterType="String" resultMap="SdConsumerResultMap">
        select
        <include refid="columnSql"></include>
        from sd_consumer t
        where t.username = #{value}
    </select>

    <select id="selectConsumerInfos" resultMap="SdConsumerResultMap">
        select
        <include refid="columnSql"></include>
        from sd_consumer t
    </select>

    <select id="findByPage" parameterMap="parameterMap" resultMap="SdConsumerResultMap">
        select
        <include refid="columnSql"></include>
        from sd_consumer t
        <where>
            <if test="username != null and username != ''">
                and t.username like '%${username}%'
            </if>
            <if test="name != null and name != ''">
                and t.name like '%${name}%'
            </if>
        </where>
		order by t.id asc
    </select>

	<insert id="insertConsumerInfo" parameterMap="parameterMap">
		insert into sd_consumer(name,phone,email,username,password,created_at,updated_at)
		values(#{name},#{phone},#{email},#{username},#{password},#{createdAt},#{updatedAt})
	</insert>


	<update id="updateNotNull" parameterMap="parameterMap">
		update sd_consumer
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="phone != null">
				phone = #{phone},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="username != null">
				username = #{username},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt},
			</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete" parameterType="java.lang.Integer">
		delete from sd_consumer where id = #{value}
	</delete>

</mapper>